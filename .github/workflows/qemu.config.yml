# QEMU buildroot

name: QEMU-buildroot

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'qemu.config/qemu.config'
  pull_request:
    branches: [ main ]
    paths:
      - 'qemu.config/qemu.config'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Clone buildroot
        run: git clone git://git.buildroot.org/buildroot
      - name: Clone this repo
        run: git clone https://raspiduino:${{ secrets.MY_ACCESS_TOKEN }}@github.com/raspiduino/.config
      - name: Copy file from this repo to buildroot
        run: cp .config/qemu.config/qemu.config buildroot/.config
      - name: Build
        run: |
          cd buildroot
          make oldconfig
          make -j2
      - name: Rename the ISO file
        run: |
          cd buildroot/output/images
          mv rootfs.iso9660 QEMU-buildroot.iso
      - name: Create a new release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
          body: |
            Prebuilt ISO file from Github Action
            You can download it below.
      - name: Upload the ISO file
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: buildroot/output/images/QEMU-buildroot.iso
          asset_name: QEMU-buildroot.iso
          asset_content_type: application/octet-stream # There is no type for ISO file, so we must use this
